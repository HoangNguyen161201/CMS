@model assignment.Models.Topic





@{
    Layout = "../Shared/_LayoutMain.cshtml";
}

<p class="title">
    Edit topic __ &#127876;
</p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.TopicId)
    <div>
        <div class="formControll">
            <p class='label_input'>
                @Html.LabelFor(model => model.TopicId)
            </p>
            <div class="input inputBlur">
                <i class="fas fa-key"></i>
                @Html.TextBoxFor(model => model.TopicId, new { disabled = "disabled" })
            </div>
        </div>
        @Html.ValidationMessageFor(model => model.TopicId, null, new { @class = "error" })
    </div>

    <div class="gridForm">
        <div>
            <div class="formControll">
                <p class='label_input'>
                    @Html.LabelFor(model => model.Topic_name)
                </p>
                <div class="input inputBlur">
                    <i class="fas fa-pencil-alt"></i>
                    @Html.TextBoxFor(model => model.Topic_name, new { placeholder = "Enter topic name ..." })
                </div>
            </div>
            @Html.ValidationMessageFor(model => model.Topic_name, null, new { @class = "error" })
        </div>

        <div>
            <div class="formControll">
                <p class='label_input'>
                    @Html.LabelFor(model => model.CourseId)
                </p>
                <div class="input inputBlur">
                    @{Html.RenderAction("ChooseCourse", "Topic");}
                </div>
            </div>
            @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div>
        <div class="formControll">
            <p class='label_input'>
                @Html.LabelFor(model => model.Topic_description)
            </p>
            @Html.TextAreaFor(model => model.Topic_description, new { placeholder = "Enter experience details ...", @class = "input inputBlur" })
        </div>
        @Html.ValidationMessageFor(model => model.Topic_description, null, new { @class = "error" })
    </div>
    <button class="bt__default">Save</button>
}







